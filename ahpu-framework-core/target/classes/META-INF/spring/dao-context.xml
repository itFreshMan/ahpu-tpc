<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
     
	<bean id="sequenceFactory" class="cn.edu.ahpu.common.dao.key.SequenceFactory">
		<property name="uniqueTableApp">
			<bean class="cn.edu.ahpu.common.dao.key.impl.DefaultUniqueTableApp">
		    	<constructor-arg index="0" ref="dataSource" />
		    </bean>
		</property>
		<property name="transactionTemplate" ref="transactionTemplate" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
      	<property name="initialSize" value="${jdbc.initialSize}" />
      	<property name="minIdle" value="${jdbc.minIdle}" /> 
      	<property name="maxActive" value="${jdbc.maxActive}" />

      	<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
      	<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
      	
      	<property name="validationQuery" value="${jdbc.validationQuery}" />  
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
        <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />  
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${jdbc.logAbandoned}" />
        
      	<property name="filters" value="${jdbc.filtes}" /> 
	</bean>
	
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
    	<constructor-arg index="0" ref="dataSource" />
    </bean>
    
    <bean class="cn.edu.ahpu.common.dao.jdbc.NamedParameterJdbcPager">
		<constructor-arg ref="dataSource" />
		<property name="builder">
			<!-- sql语句分页构造器：支持mysql和oralce -->
			<bean id="sqlBuilder" class="cn.edu.ahpu.tpc.framework.core.support.SqlBuilderFactoryBean" />
		</property>
	</bean>
    
    <!-- 对任何带有@Repository 注解的对象自动激活其数据访问异常转换 -->
    <bean id="persistenceManager" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
    	<property name="proxyTargetClass" value="true" />
    </bean>
    
	<!-- 配置sessionFactory, 注意这里引入的包的不同  -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" ref="hibernatePackagesToScan" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
			</props>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">   
  		<property name="sessionFactory">   
   			<ref bean="sessionFactory" />   
  		</property>   
 	</bean>

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
 		<property name="transactionManager" ref="transactionManager" />
 	</bean>
</beans>